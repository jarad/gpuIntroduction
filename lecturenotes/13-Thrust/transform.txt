#include <thrust/iterator/transform_iterator.h> 
...thrust::device_vector <int> vec(3); 
vec[0] = 10; 
vec[1] = 20; 
vec[2] = 30;// create iterator thrust::transform_iterator <int> first = 
  thrust::make_transform_iterator(vec.begin(), negate<int>());
thrust::transform_iterator <int> last = 
  thrust::make_transform_iterator(vec.end(), negate<int>());first[0] // returns -10 
first[1] // returns -20first[2] // returns -30thrust::reduce(first, last); // returns -60 (i.e. -10 + -20 + -30)

//same thing:thrust::reduce(
  thrust::make_transform_iterator(
    vec.begin(), negate<int>()),  thrust::make_transform_iterator(
    vec.end(), negate<int>()));