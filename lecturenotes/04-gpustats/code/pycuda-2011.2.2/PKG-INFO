Metadata-Version: 1.1
Name: pycuda
Version: 2011.2.2
Summary: Python wrapper for Nvidia CUDA
Home-page: http://mathema.tician.de/software/pycuda
Author: Andreas Kloeckner
Author-email: inform@tiker.net
License: MIT
Description: 
                    PyCUDA lets you access `Nvidia <http://nvidia.com>`_'s `CUDA
                    <http://nvidia.com/cuda/>`_ parallel computation API from Python.
                    Several wrappers of the CUDA API already exist-so what's so special
                    about PyCUDA?
        
                    * Object cleanup tied to lifetime of objects. This idiom, often
                      called
                      `RAII <http://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization>`_
                      in C++, makes it much easier to write correct, leak- and
                      crash-free code. PyCUDA knows about dependencies, too, so (for
                      example) it won't detach from a context before all memory
                      allocated in it is also freed.
        
                    * Convenience. Abstractions like pycuda.driver.SourceModule and
                      pycuda.gpuarray.GPUArray make CUDA programming even more
                      convenient than with Nvidia's C-based runtime.
        
                    * Completeness. PyCUDA puts the full power of CUDA's driver API at
                      your disposal, if you wish. It also includes code for
                      interoperability with OpenGL.
        
                    * Automatic Error Checking. All CUDA errors are automatically
                      translated into Python exceptions.
        
                    * Speed. PyCUDA's base layer is written in C++, so all the niceties
                      above are virtually free.
        
                    * Helpful `Documentation <http://documen.tician.de/pycuda>`_ and a
                      `Wiki <http://wiki.tiker.net/PyCuda>`_.
        
                    Relatedly, like-minded computing goodness for `OpenCL <http://khronos.org>`_
                    is provided by PyCUDA's sister project `PyOpenCL <http://pypi.python.org/pypi/pyopencl>`_.
                    
Platform: UNKNOWN
Classifier: Environment :: Console
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Visualization
